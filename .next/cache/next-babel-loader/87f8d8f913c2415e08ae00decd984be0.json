{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/shaurya/trial-x/containers/LayoutDrawer.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer'; // import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline'; // import Typography from '@material-ui/core/Typography';\n\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton'; // import MenuIcon from '@material-ui/icons/Menu';\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport CustomAppBar from '../components/CustomAppBar';\nimport Avatar from '@material-ui/core/Avatar';\nvar drawerWidth = 240;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex'\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap'\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    drawerClose: _defineProperty({\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1\n    }, theme.breakpoints.up('sm'), {\n      width: theme.spacing(9) + 1\n    }),\n    toolbar: _objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1)\n    }, theme.mixins.toolbar),\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3)\n    }\n  };\n});\nexport default function LayoutDrawer(props) {\n  var _clsx, _clsx2;\n\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleDrawerOpen = function handleDrawerOpen() {\n    setOpen(true);\n  };\n\n  var handleDrawerClose = function handleDrawerClose() {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(CustomAppBar, {\n    open: open,\n    handleDrawerOpen: handleDrawerOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), __jsx(Drawer, {\n    variant: \"permanent\",\n    className: clsx(classes.drawer, (_clsx = {}, _defineProperty(_clsx, classes.drawerOpen, open), _defineProperty(_clsx, classes.drawerClose, !open), _clsx)),\n    classes: {\n      paper: clsx((_clsx2 = {}, _defineProperty(_clsx2, classes.drawerOpen, open), _defineProperty(_clsx2, classes.drawerClose, !open), _clsx2))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: handleDrawerClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? __jsx(ChevronRightIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }) : __jsx(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))), __jsx(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), open ? __jsx(Avatar, {\n    alt: \"Remy Sharp\",\n    src: \"/images/gilly.jpg\",\n    style: {\n      height: '200px',\n      width: '200px',\n      marginLeft: '20px',\n      marginTop: '20px',\n      marginBottom: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }) : __jsx(Avatar, {\n    alt: \"Remy Sharp\",\n    src: \"\",\n    className: classes.orange,\n    style: {\n      marginTop: '15px',\n      marginBottom: '15px',\n      marginLeft: '15px',\n      marginRight: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"G\"), __jsx(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(ListItem, {\n    button: true,\n    key: \"wallet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(AccountBalanceWalletOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })), __jsx(ListItemText, {\n    primary: \"My Wallet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), __jsx(ListItem, {\n    button: true,\n    key: \"collection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(LibraryMusicOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), __jsx(ListItemText, {\n    primary: \"My Collection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })), __jsx(ListItem, {\n    button: true,\n    key: \"creations\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(ArtTrackSharpIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), __jsx(ListItemText, {\n    primary: \"My Creations\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), __jsx(ListItem, {\n    button: true,\n    key: \"logout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, __jsx(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, __jsx(ExitToAppOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })), __jsx(ListItemText, {\n    primary: \"Logout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })))), __jsx(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), props.children));\n}","map":{"version":3,"sources":["/home/shaurya/trial-x/containers/LayoutDrawer.js"],"names":["React","clsx","makeStyles","useTheme","Drawer","List","CssBaseline","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","CustomAppBar","Avatar","drawerWidth","useStyles","theme","root","display","drawer","width","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","LayoutDrawer","props","classes","useState","open","setOpen","handleDrawerOpen","handleDrawerClose","paper","direction","height","marginLeft","marginTop","marginBottom","orange","marginRight","children"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport CustomAppBar from '../components/CustomAppBar';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function LayoutDrawer(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      \n      <CustomAppBar open={open} handleDrawerOpen={handleDrawerOpen } />\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        {/* <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List> */}\n        {open ? \n            <Avatar alt=\"Remy Sharp\" src=\"/images/gilly.jpg\" style={{ height: '200px', width: '200px', marginLeft: '20px', marginTop: '20px', marginBottom: '20px' }}/>\n            : \n            <Avatar alt=\"Remy Sharp\" src=\"\" className={classes.orange} style={{ marginTop: '15px', marginBottom: '15px', marginLeft: '15px', marginRight: '5px' }}>\n                G\n            </Avatar>\n        }\n        \n        <Divider />\n        <List>\n            <ListItem button key='wallet'>\n                <ListItemIcon><AccountBalanceWalletOutlinedIcon /></ListItemIcon>\n                <ListItemText primary='My Wallet' />\n            </ListItem>\n\n            <ListItem button key='collection'>\n                <ListItemIcon><LibraryMusicOutlinedIcon /></ListItemIcon>\n                <ListItemText primary=\"My Collection\" />\n            </ListItem>\n\n            <ListItem button key='creations'>\n                <ListItemIcon><ArtTrackSharpIcon /></ListItemIcon>\n                <ListItemText primary='My Creations' />\n            </ListItem>\n\n            <ListItem button key='logout'>\n                <ListItemIcon><ExitToAppOutlinedIcon /></ListItemIcon>\n                <ListItemText primary=\"Logout\" />\n            </ListItem>\n          {/* {['My Wallet', 'My Collection', 'My Creations', 'Logout'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemIcon><ExitToAppOutlinedIcon /></ListItemIcon>\n              <ListItemIcon><AccountBalanceWalletOutlinedIcon /></ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))} */}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n            { props.children }\n      </main>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}